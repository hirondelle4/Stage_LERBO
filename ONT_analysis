##### Requirements #######

pycoQC : Leger, A. & Leonardi, T. pycoQC, interactive quality control for Oxford Nanopore Sequencing. JOSS 4, 1236 (2019).
NanoFilt : De Coster, W., D’Hert, S., Schultz, D. T., Cruts, M. & Van Broeckhoven, C. NanoPack: visualizing and processing long-read sequencing data. Bioinformatics 34, 2666–2669 (2018).
filtlong : https://github.com/rrwick/Filtlong
vsearch : Rognes, T., Flouri, T., Nichols, B., Quince, C. & Mahé, F. VSEARCH: a versatile open source tool for metagenomics. PeerJ 4, (2016).
minimap2 : Li, H. Minimap2: pairwise alignment for nucleotide sequences. Bioinformatics 34, 3094–3100 (2018).
Racon : Vaser, R., Sović, I., Nagarajan, N. & Šikić, M. Fast and accurate de novo genome assembly from long uncorrected reads. Genome Res 27, 737–746 (2017).
Medaka : https://github.com/nanoporetech/medaka
Porechop : https://github.com/rrwick/Porechop


dir=$(pwd) ## Affectation de la localisation du répertoire
echo $dir ## localisation du répertoire

data='/path/to/data' ## Champ à modifier : localisation des données '.fastq.gz'

#### Si les données sont barcodés, renommer les fichiers selon le nom de leur provenance

## Creer son espace de travail
day=$(date +"%m-%d-%Y")
mkdir ${dir}/Working_space_ont_${day}/

## déplacer les données '.fastq.gz' dans l'espace de travail
mv $data ${dir}/Working_space_ont_${day}/

## se positionner dans l'espace de travail
cd ${dir}/Working_space_ont_${day}/${data}/

## créer une variable pour récupérer les noms des fichiers
ech=$(ls *.fastq.gz | sed 's/.fastq.gz//')
echo $ech

######### Analyse statistique par PycoQC
cd ${dir}/Working_space_ont_${day}/
mkdir 00_pycoqc

. /path/to/pycoqc/2.5.0.19/env.sh ## à modifier : activation du chemin d'accès à l'environnement conda pycoQC v. 2.5.0.19
summary='/path/to/summary/file/sequencing_summary.txt' ## à modifier

pycoQC  --summary_file $summary\
        --html_outfile ${dir}/Working_space_ont_${day}/00_pycoqc/pycoQC_output_min_pass_q10.html  \
        --min_pass_qual 10

######### Filtration des données '.fastq.gz'
cd ${dir}/Working_space_ont_${day}/
mkdir 01_nanofilt

. /path/to/nanofilt/2.6.0/env.sh ## à modifier : activation du chemin d'accès à l'environnement conda nanoFilt v. 2.6.0

   ## Créer le répertoire pour l'étape de filtration des reads
cd ${dir}/Working_space_ont_${day}/
mkdir 01_nanofilt

min_length=5120 ## choix de la longueur minimale
max_length=5960 ## choix de la longueur maximale
quality=11 ## choix d'un seuil qualité
summary='/path/to/summary/file/sequencing_summary.txt' ## à modifier
read_type='1D'

for file in $ech
do
#fi=$(echo ${file} | sed 's/_q[0-9][0-9]*//' )
gunzip -c ${dir}/Working_space_ont_${day}/${data}/${file}.fastq.gz | NanoFilt -l $min_length --maxlength $max_length  \
        -s $summary  \
        -q $quality --readtype $read_type | gzip > ${dir}/Working_space_ont_${day}/01_nanofilt/${file}_filt.fastq.gz
done

####### Extraction d'une quantité de meilleurs reads par échantillon
cd ${dir}/Working_space_ont_${day}/
mkdir 02_filtlong

. /path/to/filtlong/0.2/env.sh ## à modifier : activation du chemin d'accès à l'environnement conda filtlong v. 0.2
nb=300 ## choix du nombre de reads à récupérer
for file in $ech
do
    count=$(zcat ${dir}/Working_space_ont_${day}/01_nanofilt/${file}_filt.fastq.gz | awk '(NR%4==2)' | wc -l )
    extract=$((${nb}*100/${count}))
    filtlong -p $extract ${dir}/Working_space_ont_${day}/01_nanofilt/${file}_filt.fastq.gz | gzip > ${dir}/Working_space_ont_${day}/02_filtlong/${file}_filt_set.fastq.gz
done

###### Creation d'un consensus par clusterisation
cd ${dir}/Working_space_ont_${day}/
mkdir 03_vsearch

  ##translate fastq.gz to fasta
for file in $ech
do
    zcat ${dir}/Working_space_ont_${day}/02_filtlong/${file}_filt_set.fastq.gz | paste - - - - | cut -f 1,2 | sed 's/^@/>/' | tr "\t" "\n" > ${dir}/Working_space_ont_${day}/02_filtlong/${file}_filt_set.fasta
done

  ##generation d'une clusterisation pour eliminer de potentiels contaminants et générer un consensus

perc_id=0.84 ## choix d'un seuil de distance pour le rassemblement (dependant du seuil qualité; distance doublée entre deux reads)

. /path/to/vsearch/2.14.2/env.sh ## à modifier : activation du chemin d'accès à l'environnement conda vsearch 2.14.2

for file in $ech
do
    vsearch --cluster_size ${dir}/Working_space_ont_${day}/02_filtlong/${file}_filt_set.fasta  --id $perc_id --strand both \
    --consout ${dir}/Working_space_ont_${day}/03_vsearch/consensus_"${file}".fasta \
    --clusters 02_vsearch/${file}_set_cluster_ --fasta_width 0

    ## garder et renommer le premier cluster

    awk '/^>/{print ">'${file}'_consensus_vsearch"; next}{print $0}' ${dir}/Working_space_ont_${day}/03_vsearch/consensus_${file}.fasta | head -2 > ${dir}/Working_space_ont_${day}/03_vsearch/sequence_${file}_consensus.fasta

    ## Orienter tous les fichiers dans le sens Forward
    cat ${dir}/Working_space_ont_${day}/03_vsearch/sequence_${file}_consensus.fasta | while read L
    do
    if [[ $L =~ ^'>' ]]
    then
    echo $L >> ${dir}/Working_space_ont_${day}/03_vsearch/sequence_${file}_consensus_forward.fasta
    else if [[ $L =~ "GGAAGAGCCGACATCGA" ]]
      then
      echo $L | tr ATCG TAGC | rev >> ${dir}/Working_space_ont_${day}/03_vsearch/sequence_${file}_consensus_forward.fasta
      else
      echo $L >> ${dir}/Working_space_ont_${day}/03_vsearch/sequence_${file}_consensus_forward.fasta
      fi
    fi
    done >& run.log

done


###### Creation du fichier de chevauchements reads contre reférence
cd ${dir}/Working_space_ont_${day}/
mkdir 04_minimap2

. /path/to/minimap2/2.9/env.sh ## à modifier : activation du chemin d'accès à l'environnement conda minimap2 v.2.9
NCPUS=28 ## ressource informatique à modifier selon les possibilités computationnelles

for file in $ech
do
  minimap2 -x ava-ont -t $NCPUS  \
        ${dir}/Working_space_ont_${day}/03_vsearch/sequence_${file}_consensus_forward.fasta \
        ${dir}/Working_space_ont_${day}/01_nanofilt/${file}_filt.fastq.gz \
        > ${dir}/Working_space_ont_${day}/04_Minimap2/${file}_ovlp_ref_mmp2.paf

        chmod u+x ${dir}/Working_space_ont_${day}/04_Minimap2/${file}_ovlp_ref_mmp2.paf  ### activation droits d'accès
done

###### Rapide Consensus
cd ${dir}/Working_space_ont_${day}/
mkdir 05_racon
. path/to/racon/1.4.10/env.sh ## activation du chemin d'accès à l'environnement conda racon v. 1.4.10


NCPUS=28 ## ressource informatique à modifier selon les possibilités computationnelles
for file in $ech
do
  racon -w 500 -m 8 -x -6 -g -8 -t $NCPUS ${dir}/Working_space_ont_${day}/01_nanofilt/${file}_filt.fastq.gz  \
        ${dir}/Working_space_ont_${day}/04_Minimap2/${file}_ovlp_ref_mmp2.paf \
        ${dir}/Working_space_ont_${day}/03_vsearch/sequence_${file}_consensus_forward.fasta \
        > ${dir}/Working_space_ont_${day}/05_racon/${file}_Racon.fasta

done


###### Polissage par Medaka
cd ${dir}/Working_space_ont_${day}/
mkdir 06_medaka

. path/to/medaka/0.11.4/env.sh ## activation du chemin d'accès à l'environnement conda medaka v. 0.11.4
NCPUS=20  ## ressource informatique à modifier selon les possibilités computationnelles

for file in $ech
do
  medaka_consensus -i ${dir}/Working_space_ont_${day}/01_nanofilt/${file}_filt.fastq.gz \
        -d ${dir}/Working_space_ont_${day}/05_racon/${file}_Racon.fasta -t $NCPUS \
        -o ${dir}/Working_space_ont_${day}/06_medaka/${file}_Medaka/ -m r941_min_high_g344

  cp ${dir}/Working_space_ont_${day}/06_medaka/${file}_Medaka/consensus.fasta ${dir}/Working_space_ont_${day}/06_medaka/${file}_medaka.fasta
  cat ${dir}/Working_space_ont_${day}/06_medaka/${file}_medaka.fasta | awk '/^>/{print ">'${file}'_medaka" ; next }{print $0} > ${dir}/Working_space_ont_${day}/06_medaka/${file}_medaka_RN.fasta
done

#### Détection et suppression adaptateurs par Porechop
cd ${dir}/Working_space_ont_${day}/
mkdir 07_porechop

. path/to/porechop/0.2.4/env.sh ## activation du chemin d'accès à l'environnement conda porechop v. 0.2.4

for file in $ech
do
  porechop -i ${dir}/Working_space_ont_${day}/06_medaka/${file}_medaka_RN.fasta -o ${dir}/Working_space_ont_${day}/07_porechop/${file}_ont.fasta
done
